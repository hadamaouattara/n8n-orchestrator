{
  "name": "Monthly Close Forecast",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 6 1 * *"
            }
          ]
        }
      },
      "id": "7c5b3b4a-8e2f-4a1d-9c6e-3f8a2b5d7e9c",
      "name": "Monthly Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "={{ $env.SAP_ODATA_URL }}/ACDOCA?$filter=CompanyCode eq '{{ $env.SAP_COMPANY_CODE }}' and FiscalYear eq year(now()) and FiscalPeriod eq month(now())",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "sapOdataApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6",
      "name": "Extract SAP ACDOCA",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "={{ $env.SAP_ODATA_URL }}/MBEW?$filter=CompanyCode eq '{{ $env.SAP_COMPANY_CODE }}'",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "sapOdataApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "b2c3d4e5-f6g7-8h9i-0j1k-l2m3n4o5p6q7",
      "name": "Extract Material Valuation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        460,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "// Consolidate SAP data for ML processing\nconst acdocaData = $input.first().json;\nconst mbewData = $input.all()[1].json;\n\n// Feature engineering for PUP prediction\nconst consolidatedData = {\n  timestamp: new Date().toISOString(),\n  companyCode: $env.SAP_COMPANY_CODE,\n  fiscalPeriod: new Date().getMonth() + 1,\n  fiscalYear: new Date().getFullYear(),\n  acdoca: acdocaData.value || [],\n  materialValuation: mbewData.value || [],\n  metadata: {\n    extractionTime: new Date().toISOString(),\n    recordCount: (acdocaData.value?.length || 0) + (mbewData.value?.length || 0)\n  }\n};\n\nreturn consolidatedData;"
      },
      "id": "c3d4e5f6-g7h8-9i0j-1k2l-m3n4o5p6q7r8",
      "name": "Transform SAP Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        380
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.SAPIENCE_API_URL }}/predict/pup",
        "sendBody": true,
        "contentType": "json",
        "bodyParameters": {
          "parameters": [
            {
              "name": "data",
              "value": "={{ JSON.stringify($json) }}"
            },
            {
              "name": "model_type",
              "value": "top_down_ml"
            },
            {
              "name": "confidence_interval",
              "value": "0.95"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.CLAUDE_API_KEY }}"
            },
            {
              "name": "X-Tenant-ID",
              "value": "{{ $env.TENANT_ID }}"
            }
          ]
        },
        "options": {
          "timeout": 60000
        }
      },
      "id": "d4e5f6g7-h8i9-0j1k-2l3m-n4o5p6q7r8s9",
      "name": "ML Prediction API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        900,
        380
      ]
    },
    {
      "parameters": {
        "jsCode": "// Analyze predictions and detect anomalies\nconst predictions = $json;\n\n// Extract key metrics\nconst pupForecast = predictions.pup_forecast || {};\nconst confidenceInterval = predictions.confidence_interval || {};\nconst anomalies = predictions.anomalies || [];\n\n// Calculate business impact\nconst totalVariance = Math.abs(pupForecast.predicted - pupForecast.actual || 0);\nconst materialAnomalies = anomalies.filter(a => a.impact_eur > 10000);\n\n// Generate executive summary\nconst summary = {\n  executiveSummary: {\n    totalPUPForecast: pupForecast.predicted,\n    confidenceInterval: `${confidenceInterval.lower} - ${confidenceInterval.upper}`,\n    totalVariance: totalVariance,\n    materialAnomalies: materialAnomalies.length,\n    riskLevel: totalVariance > 100000 ? 'HIGH' : totalVariance > 50000 ? 'MEDIUM' : 'LOW'\n  },\n  detailedResults: predictions,\n  timestamp: new Date().toISOString(),\n  reportId: `MCF-${new Date().getFullYear()}-${String(new Date().getMonth() + 1).padStart(2, '0')}`\n};\n\nreturn summary;"
      },
      "id": "e5f6g7h8-i9j0-1k2l-3m4n-o5p6q7r8s9t0",
      "name": "Analyze Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1120,
        380
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://graph.microsoft.com/v1.0/teams/{{ $env.TEAMS_TEAM_ID }}/channels/{{ $env.TEAMS_CHANNEL_ID }}/messages",
        "sendBody": true,
        "contentType": "json",
        "bodyParameters": {
          "parameters": [
            {
              "name": "body",
              "value": "={\n  \"contentType\": \"html\",\n  \"content\": \"<h2>ðŸ“Š Monthly Close Forecast - {{ $json.reportId }}</h2><br><strong>PUP Forecast:</strong> â‚¬{{ $json.executiveSummary.totalPUPForecast.toLocaleString() }}<br><strong>Confidence Interval:</strong> {{ $json.executiveSummary.confidenceInterval }}<br><strong>Risk Level:</strong> {{ $json.executiveSummary.riskLevel }}<br><strong>Material Anomalies:</strong> {{ $json.executiveSummary.materialAnomalies }}<br><br><a href='{{ $env.SAPIENCE_DASHBOARD_URL }}/reports/{{ $json.reportId }}'>ðŸ“ˆ View Full Dashboard</a>\"\n}"
            }
          ]
        },
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "microsoftTeamsOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "f6g7h8i9-j0k1-2l3m-4n5o-p6q7r8s9t0u1",
      "name": "Notify Teams",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1340,
        300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.SAPIENCE_API_URL }}/reports/generate",
        "sendBody": true,
        "contentType": "